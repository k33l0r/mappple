!!! 5
%html{ :lang => "en" }
  %head
    %meta{ :charset => "UTF-8" }
    %meta{ :content => "IE=edge,chrome=1", "http-equiv" => "X-UA-Compatible" }
    %title Mappple
    %meta{ :content => "Dribbble + Google Maps mash-up", :name => "description" }
    %meta{ :content => "Matias Korhonen", :name => "author" }
    %meta{ :content => "width=device-width, initial-scale=1.0", :name => "viewport" }
    %link{ :href => "/favicon.ico", :rel => "shortcut icon" }
    %link{:href => "http://fonts.googleapis.com/css?family=Ubuntu:light,lightitalic,regular,italic,bold,bolditalic", :rel => "stylesheet", :type => "text/css"}
    %link{ :href => "/stylesheets/screen.css", :rel => "stylesheet" }
    %script{ :src => "//ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js" }
    %script{ :src => "http://maps.google.com/maps/api/js?sensor=false" }
    %script{ :src => "/scripts/history.js" }
    %script{ :src => "/scripts/reveal.js" }
    %script{ :src => "/scripts/tiptip.js" }
    %script{ :src => "/scripts/ejs.js" }
    %script{ :src => "/scripts/store_and_json2.js" }
    %script{ :src => "/scripts/application.js?1" }
    /[if lt IE 9]
      %script{ :src => "http://html5shiv.googlecode.com/svn/trunk/html5.js" }
  %body
    %header
      %hgroup
        %h1 Mappple
        %h2
          Google Maps +
          %a{ :href => "http://dribbble.com/"} Dribbble
          &#61; Mappple
      %a#about{ :"data-reveal-id" => "about_modal", :href => "" } About Mappple
    #content
      #error
      = yield
      .clear
    .clear
    %footer
      :textile
        Copyright &copy; %(year)2011% "Matias Korhonen":https://matiaskorhonen.fi
    #about_modal{ :class => "reveal-modal" }
      %h2 About Mappple
      :markdown
        **Mappple is a simple Google Maps + [Dribbble][dribbble] mashup.**
        
        The location for each shot is determined by the Dribbble Player's
        location (as set in their profile). Unfortunately this also has the
        effect that some markers on the map may overlap.
        
        Geocoding of the Players' locations is done using the Google Maps
        Geocoding API with a fallback to the [GeoNames][geonames] geocoding
        API.
        
        Results from the Geocoding are stored using [localStorage][storage]
        where supported (and with appropriate fallbacks via
        [store.js][storejs]).
        
        The HTML and CSS was done using [HAML][haml] and [SCSS][scss],
        respectively, and the JavaScript was created with
        [CoffeeScript][cs]. I mostly code in Ruby and I've never used
        CoffeeScript before, so the resulting JS might be awful and full of JS
        anti-patterns. Or then again it might not.
        
        [cs]: http://coffeescript.org/
        [dribbble]: http://dribbble.com/
        [geonames]: http://www.geonames.org/
        [haml]: http://haml-lang.com/
        [scss]: http://sass-lang.com/
        [storage]: https://developer.mozilla.org/en/dom/storage#localStorage
        [storejs]: https://github.com/marcuswestin/store.js

      %a{ :class => "close-reveal-modal" } &#215;
    :javascript
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-22908137-2']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    /[if lt IE 7 ]
      %script{:src => "js/libs/dd_belatedpng.js"}
      :javascript
        DD_belatedPNG.fix('img, .png_bg');
